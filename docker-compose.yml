version: '3.1'
services:
  redis:
    image: redis
    expose:
      - 6379
  ui:
    image: us.gcr.io/anymessage-219921/ui:latest
    build: ./ui
    command: npm run dev:80
    volumes:
      - ./ui:/usr/ui/
      - /usr/ui/node_modules
      # - /usr/ui/.next # need this for non-dev
    environment:
      - API_ENDPOINT=http://localhost:${API_PORT}
    ports:
      - "3000:3000"
      - "80:80"
    env_file: .env
  api:
    image: us.gcr.io/anymessage-219921/api:latest
    build: ./api
    command: npm run dev
    volumes:
      - ./api:/usr/api
      - /usr/api/node_modules
    ports:
      - "1337:1337"
    depends_on:
      - db
    env_file: .env
  db:
    image: postgres
    restart: always
    volumes:
      - database:/var/lib/postgresql/data
    env_file: .env
  db-migrate:
    image: us.gcr.io/anymessage-219921/db-migrate:latest
    build: ./db
    restart: on-failure
    environment:
      - TARGET_URI=db:postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DATABASE}
      - SQITCH_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./db:/work
    depends_on:
      - db
    env_file: .env
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
volumes:
  database: